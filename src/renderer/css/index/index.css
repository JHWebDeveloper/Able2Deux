#root {
	display: grid;
	grid-template-columns: 308px minmax(384px, auto);
	grid-template-rows: min-content repeat(3, 1fr);
	grid-gap: 18px;
	padding: 18px;
}

header {
	position: relative;
	width: 308px;
	padding-left: 10px;
	border-left: 12px solid var(--primary);
}

header::after {
	content: 'DEUX';
	display: block;
	position: absolute;
	top: 0;
	right: 0;
	height: 32px;
	width: 103px;
	background-color: var(--primary);
	color: var(--background);
	font: 600 32px/34px var(--font-stack);
	text-align: center;
	transform-origin: bottom right;
	transform: translateY(-32px) rotate(-90deg);
}

header > h1 {
	font-size: 4.45rem;
	line-height: 3.8rem;
	text-transform: uppercase;
}

header > svg {
	width: 20px;
	margin-right: 2px;
}

header > p { font-size: 0.9rem; }

main { display: contents; }

button:matches([title="Format Media"], [title="Back"]) {
	margin-right: 12px;
}

.media-element {
	overflow: hidden;
	display: grid;
	grid-template-columns: min-content auto min-content;
	grid-auto-rows: 1fr 1fr;
	height: 35px;
	border-radius: 5px;
	background-color: var(--background);
}

.media-element:nth-last-child(n+2) { margin-bottom: 12px; }

.media-element > :matches(span, button) { height: inherit; }

.media-element > :matches(span:first-of-type, button) { width: 35px; }

.media-element > span { display: inherit; }

.media-element > span:first-of-type {
	justify-content: center;
	align-content: center;
	font-family: 'Material Icons';
}

.media-element > span:nth-of-type(2) {
	grid-template-columns: auto min-content;
	grid-auto-rows: auto auto;
	grid-gap: 3px 6px;
	align-content: center;
	padding-right: 6px;
	color: var(--primary);
	font-weight: 500;
	font-size: 12px;
}

.media-element > span:nth-of-type(2) > span:first-of-type {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
	display: block;
	width: auto;
}

.media-element > span:nth-of-type(2) > span:last-of-type {
	padding-top: 2px;
}

progress {
	overflow: hidden;
	grid-column: 1 / span 2;
	position: relative;
	width: 100%;
	height: 10px;
	border-radius: 2px;
}

progress::-webkit-progress-bar {
	background-color: var(--background-alt-1);
}

progress::-webkit-progress-value {
	background-color: var(--primary);
}

@keyframes indeterminate {
	0%   { transform: translate(-100%) scaleX(1); }
	50%  { transform: translate(500%) scaleX(7.5); }
	100% { transform: translate(1000%) scaleX(1); }
}

progress:matches([data-status="RENDERING"], [data-status="DOWNLOADING"]):indeterminate::after {
	content: '';
	position: absolute;
	top: 0;
	width: 10%;
	height: inherit;
	background-color: var(--primary);
	animation: indeterminate linear 1000ms 1000ms backwards infinite;
}

.media-element > button { border-radius: 0; }

.media-element > button:disabled { color: var(--disabled); }
